/* Config Sample
 *
 * For more information on how you can configure this file
 * see https://docs.magicmirror.builders/configuration/introduction.html
 * and https://docs.magicmirror.builders/modules/configuration.html
 *
 * You can use environment variables using a `config.js.template` file instead of `config.js`
 * which will be converted to `config.js` while starting. For more information
 * see https://docs.magicmirror.builders/configuration/introduction.html#enviromnent-variables
 */
let config = {
	address: "0.0.0.0",	// Address to listen on, can be:
							// - "localhost", "127.0.0.1", "::1" to listen on loopback interface
							// - another specific IPv4/6 to listen on a specific interface
							// - "0.0.0.0", "::" to listen on any interface
							// Default, when address config is left out or empty, is "localhost"
	port: 8080,
	basePath: "/",	// The URL path where MagicMirrorÂ² is hosted. If you are using a Reverse proxy
									// you must set the sub path here. basePath must end with a /
	ipWhitelist: [],	// Set [] to allow all IP addresses
									// or add a specific IPv4 of 192.168.1.5 :
									// ["127.0.0.1", "::ffff:127.0.0.1", "::1", "::ffff:192.168.1.5"],
									// or IPv4 range of 192.168.3.0 --> 192.168.3.15 use CIDR format :
									// ["127.0.0.1", "::ffff:127.0.0.1", "::1", "::ffff:192.168.3.0/28"],

	useHttps: false,			// Support HTTPS or not, default "false" will use HTTP
	httpsPrivateKey: "",	// HTTPS private key path, only require when useHttps is true
	httpsCertificate: "",	// HTTPS Certificate path, only require when useHttps is true

	language: "en",
	locale: "en-US",
	logLevel: ["INFO", "LOG", "WARN", "ERROR"], // Add "DEBUG" for even more logging
	timeFormat: 12,
	units: "imperial",

	modules: [
		{
			module: "alert",
		},
		{
			module: "updatenotification",
			position: "top_bar"
		},
		{
			module: "clock",
			position: "top_left"
		},
		{
			module: "calendar",
			position: "top_left",
			config: {
				calendars: [
					{
						fetchInterval: 7 * 24 * 60 * 60 * 1000,
						symbol: "calendar-check",
						url: "${MIKE_CAL}"
					}
				]
			}
		},
		{
			module: "weather",
			position: "top_right",
			config: {
				weatherProvider: "openweathermap",
				type: "current",
				locationID: "5110302",
				apiKey: "${OPENWEATHER_API_KEY}",
                roundTemp: true
			}
		},
		{
			module: "weather",
			position: "top_right",
			header: "Weather Forecast",
			config: {
				weatherProvider: "openweathermap",
				type: "forecast",
				locationID: "5110302",
				apiKey: "${OPENWEATHER_API_KEY}",
                roundTemp: true
			}
		},
		{
            module: 'MMM-nyc-transit',
            position: 'top_right',
            header: "${MTA_STATION_HEADER}",
            config: {
              apiKey: "${MTA_API_KEY}",
              displayType: 'list',
              mtaType: 'train',
              stations: [
                {
                  stationId: ${MTA_STATION_ID},
                  walkingTime: ${MTA_STATION_WALKING_TIME},
                  dir: {
                      upTown: true,
                      downTown: false
                  }
                }
              ],
              updateInterval: 60000
            }
		},
        {
            module: 'MMM-iFrame',
            position: 'middle_center',	// This can be any of the regions.
            config: {
                    url: ["${HOME_ASSISTANT_URL}"],
                    updateInterval: 1000 * 60 * 60,
                    width: "1280", // width of iframe
                    height: "720", // height of iframe
                    frameWidth: "1280" // width of embedded iframe, height is beeing calculated by aspect ratio of iframe
            }
        },
        {
          module: 'MMM-pages',
          config: {
            rotationTime: 0,
              modules: [
                [
                  "MMM-iFrame"
                ],
                [
                  // 'MMM-network-signal',
                  // 'MMM-Tools',
                  // 'MMM-ServerStatus'
                ]
              ],
              fixed: [
                  "clock",
                  'updatenotification',
                  'weather',
                  "calendar",
                  "MMM-nyc-transit",
                  'MMM-page-indicator',
                //'MMM-Remote-Control'
              ]
          }
        },
        {
          module: 'MMM-page-indicator',
          position: 'bottom_bar',
          config: {
            pages: 2,
            activeBright: true
          }
        }
	]
};

/*************** DO NOT EDIT THE LINE BELOW ***************/
if (typeof module !== "undefined") { module.exports = config; }
